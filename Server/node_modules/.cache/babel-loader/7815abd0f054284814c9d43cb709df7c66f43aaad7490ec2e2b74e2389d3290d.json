{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PRIYA\\\\Downloads\\\\code_contribution_final\\\\Client\\\\src\\\\components\\\\mul\\\\nik_otherbase.jsx\",\n  _s = $RefreshSig$();\nimport { useNavigate } from \"react-router-dom\";\nimport otherbase1 from \"../../images/otherbase1.png\";\nimport otherbase2 from \"../../images/otherbase2.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Nik_otherbase() {\n  _s();\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      'fontSize': 'xx-large'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Nikhilam with other bases:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"As the above examples shows, we can multiply any two numbers, which are nearer to any power of 10 easily. This method can be further extended. Consider 39 x 38. These two numbers are not near to any power of 10. But they are nearer to 40. So they can be multiplied as follows.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"We choose 40, a multiple of a power of 10 as the base.e\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Write the two numbers on the left hand side.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Subtract the numbers from 40 and write them on the rigth hand side. While subtracting write the difference as a single digit (-1 and not -01), because the actual base is 10.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Multiply the numbers on the right hand side and write the R.H.S of the product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Add the numbers on the left hand side and subtract 40 from the sum to get the L.H.S of the result.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Since our base is 4 times the actual base(10), multiply the L.H.S value of the result by 4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"This looks as follows:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: otherbase1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Since our base (40) is 4 times 10, we multiply the digits other than the last digit (37) by 4. Hence the result is (37x4) | 2 = 158 | 2.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        'marginTop': '20px'\n      },\n      children: \"Similarly we can have cases where the base we choose is a fraction of the powers of 10. Consider 48 x 51. Both are close to 50, which is half of 100. The calculations are similar to the case where the base is a multiple of a power of 10. But at the last step, we've to divide the result by 2.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: otherbase2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Since the base we've chosen is half of 100, we've to divide the leading digits by 2.Hence we get (49/2) | (-02) = 24\\xBD | (-02) = 24 | (50 + (-02)) = 24 | 48. Thus the result is 2448. The 50 is added to -02 because of the \\xBD. \\xBD is considered as 0.50 and because it occurs in the hundreds place, it is taken as 50.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        'marginLeft': '45%'\n      },\n      onClick: () => {\n        navigate(-1);\n      },\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n_s(Nik_otherbase, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Nik_otherbase;\nvar _c;\n$RefreshReg$(_c, \"Nik_otherbase\");","map":{"version":3,"names":["useNavigate","otherbase1","otherbase2","jsxDEV","_jsxDEV","Nik_otherbase","_s","navigate","style","children","fileName","_jsxFileName","lineNumber","columnNumber","src","onClick","_c","$RefreshReg$"],"sources":["C:/Users/PRIYA/Downloads/code_contribution_final/Client/src/components/mul/nik_otherbase.jsx"],"sourcesContent":["import { useNavigate } from \"react-router-dom\"\r\nimport otherbase1 from \"../../images/otherbase1.png\"\r\nimport otherbase2 from \"../../images/otherbase2.png\"\r\nexport default function Nik_otherbase(){\r\n    const navigate = useNavigate();\r\n    return( \r\n        \r\n        <div style={{'fontSize':'xx-large'}}>\r\n            <h1>Nikhilam with other bases:</h1>\r\n            <p>As the above examples shows, we can multiply any two numbers, which are nearer to any power of 10 easily. This method can be further extended. Consider 39 x 38. These two numbers are not near to any power of 10. But they are nearer to 40. So they can be multiplied as follows.</p>\r\n            <ol>\r\n                <li>We choose 40, a multiple of a power of 10 as the base.e</li>\r\n                <li>Write the two numbers on the left hand side.</li>\r\n                <li>Subtract the numbers from 40 and write them on the rigth hand side. While subtracting write the difference as a single digit (-1 and not -01), because the actual base is 10.</li>           \r\n                <li>Multiply the numbers on the right hand side and write the R.H.S of the product</li>\r\n                <li>Add the numbers on the left hand side and subtract 40 from the sum to get the L.H.S of the result.</li>\r\n                <li>Since our base is 4 times the actual base(10), multiply the L.H.S value of the result by 4.</li>\r\n            </ol>\r\n            <h3>This looks as follows:</h3>\r\n            <img src={otherbase1}/>\r\n            <p>Since our base (40) is 4 times 10, we multiply the digits other than the last digit (37) by 4. Hence the result is (37x4) | 2 = 158 | 2.</p>\r\n            <p style={{'marginTop':'20px'}}>Similarly we can have cases where the base we choose is a fraction of the powers of 10. Consider 48 x 51. Both are close to 50, which is half of 100. The calculations are similar to the case where the base is a multiple of a power of 10. But at the last step, we've to divide the result by 2.</p>\r\n            <img src={otherbase2}/>\r\n            <p>Since the base we've chosen is half of 100, we've to divide the leading digits by 2.Hence we get (49/2) | (-02) = 24½ | (-02) = 24 | (50 + (-02)) = 24 | 48. Thus the result is 2448. The 50 is added to -02 because of the ½. ½ is considered as 0.50 and because it occurs in the hundreds place, it is taken as 50.</p>\r\n            <button style={{'marginLeft':'45%'}}onClick={()=>{navigate(-1)}}>Back</button>\r\n        </div>\r\n    \r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}