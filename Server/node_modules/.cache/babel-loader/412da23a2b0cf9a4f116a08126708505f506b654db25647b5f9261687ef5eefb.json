{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PRIYA\\\\Downloads\\\\code_contribution_final\\\\Client\\\\src\\\\components\\\\divs\\\\divs_exercise.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"../division/nik_div.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Questions = [{\n  no: '1',\n  question: 'Is 4008 divisible by 13?',\n  answer: 'No'\n}, {\n  no: '2',\n  question: 'Determine if 2369 is divisible by 23.',\n  answer: 'Yes'\n}, {\n  no: '3',\n  question: 'Determine if 15167 is divisible by 29.',\n  answer: 'Yes'\n}, {\n  no: '4',\n  question: 'Using Negative Ekadhika find if 51 divides 18469 without leaving any remainders.',\n  answer: 'No'\n}, {\n  no: '5',\n  question: 'Determine if 34282 is an integral multiple of 61.',\n  answer: 'Yes'\n}];\nconst Divs_exercise = () => {\n  _s();\n  const [userAnswers, setUserAnswers] = useState(Array(Questions.length).fill(null));\n  const handleAnswerClick = (index, answer) => {\n    const newAnswers = [...userAnswers];\n    newAnswers[index] = answer;\n    setUserAnswers(newAnswers);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Try these out!\\u2B07\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this), Questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [question.no, \")\", question.question]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: answerbutton,\n        onClick: () => handleAnswerClick(index, 'Yes'),\n        children: \"Yes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: answerbutton,\n        onClick: () => handleAnswerClick(index, 'No'),\n        children: \"No\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), userAnswers[index] !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: userAnswers[index] === question.answer ? {\n          'color': 'green',\n          'font-size': 'xx-large'\n        } : {\n          'color': 'red',\n          'font-size': 'xx-large'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: answerindicator,\n          children: \"Answer:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 141\n        }, this), userAnswers[index] === question.answer ? 'üü¢Correct!' : '‚ùåWrong!']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Divs_exercise, \"p7wzpadhfb8fAyF9sN0RJo8Rdvo=\");\n_c = Divs_exercise;\nconst answerstyle = {\n  color: 'green'\n};\nconst topcontainer = {\n  fontSize: 'x-large',\n  marginLeft: '230px',\n  marginBottom: '100px'\n};\nconst answerbutton = {\n  borderRadius: '20px',\n  marginRight: '20px',\n  marginTop: '0px',\n  marginBottom: '10px',\n  width: '180px'\n};\nconst answerindicator = {\n  color: 'black',\n  textDecoration: 'none'\n};\nexport default Divs_exercise;\nconst title = {\n  marginLeft: '40%'\n};\nvar _c;\n$RefreshReg$(_c, \"Divs_exercise\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Questions","no","question","answer","Divs_exercise","_s","userAnswers","setUserAnswers","Array","length","fill","handleAnswerClick","index","newAnswers","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","style","answerbutton","onClick","answerindicator","_c","answerstyle","color","topcontainer","fontSize","marginLeft","marginBottom","borderRadius","marginRight","marginTop","width","textDecoration","title","$RefreshReg$"],"sources":["C:/Users/PRIYA/Downloads/code_contribution_final/Client/src/components/divs/divs_exercise.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport \"../division/nik_div.css\"\r\nconst Questions = [\r\n  { no:'1',\r\n    question: 'Is 4008 divisible by 13?',\r\n    answer: 'No'\r\n  },\r\n  { no:'2',\r\n    question: 'Determine if 2369 is divisible by 23.',\r\n    answer: 'Yes'\r\n  },\r\n  { no:'3',\r\n    question: 'Determine if 15167 is divisible by 29.',\r\n    answer: 'Yes'\r\n  },\r\n  { no:'4',\r\n    question: 'Using Negative Ekadhika find if 51 divides 18469 without leaving any remainders.',\r\n    answer: 'No'\r\n  },\r\n  {    no:'5',\r\n    question: 'Determine if 34282 is an integral multiple of 61.',\r\n    answer: 'Yes'\r\n  }\r\n];\r\n\r\nconst Divs_exercise = () => {\r\n  const [userAnswers, setUserAnswers] = useState(Array(Questions.length).fill(null));\r\n\r\n  const handleAnswerClick = (index, answer) => {\r\n    const newAnswers = [...userAnswers];\r\n    newAnswers[index] = answer;\r\n    setUserAnswers(newAnswers);\r\n  };\r\n\r\n  return (\r\n    <div className='body'>\r\n    <h1>Try these out!‚¨áÔ∏è</h1>\r\n      {Questions.map((question, index) => (\r\n        <div key={index}>\r\n          <p>{question.no}){question.question}</p>\r\n          <button style={answerbutton}onClick={() => handleAnswerClick(index, 'Yes')}>Yes</button>\r\n          <button style={answerbutton}onClick={() => handleAnswerClick(index, 'No')}>No</button>\r\n          {userAnswers[index] !== null && (\r\n            <p style={userAnswers[index]===question.answer?{'color':'green','font-size':'xx-large'}:{'color':'red','font-size':'xx-large'}}><span style={answerindicator}>Answer:</span>{userAnswers[index] === question.answer ? 'üü¢Correct!' : '‚ùåWrong!'}</p>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nconst answerstyle={\r\n    color:'green'\r\n}\r\nconst topcontainer={\r\n    fontSize:'x-large',\r\n    marginLeft:'230px',\r\n    marginBottom:'100px'\r\n\r\n}\r\nconst answerbutton={\r\n    borderRadius:'20px',\r\n    marginRight:'20px',\r\n    marginTop:'0px',\r\n    marginBottom:'10px',\r\n    width:'180px'\r\n}\r\nconst answerindicator = {\r\n    color:'black',\r\n    textDecoration:'none'\r\n}\r\nexport default Divs_exercise;\r\n\r\nconst title={\r\n  marginLeft:'40%'\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}