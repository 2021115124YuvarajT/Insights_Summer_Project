{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PRIYA\\\\Downloads\\\\code_contribution_final\\\\Client\\\\src\\\\components\\\\division\\\\Nikilam.js\";\nimport React from 'react';\nimport './nik_div.css';\nimport { NavLink } from 'react-router-dom';\nimport exo_1 from '../../images/exo_div_nik_1.gif';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Nikilam = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      class: \"main_heading\",\n      children: \"NIKILAM-DIVISION TECHNIQUE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"A careful observation of the problem, 52 \\xF7 9 would reveal the following:-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"A) The quotient is 5, same as the tens digit of the dividend.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this), \"B) The remainder is 7, the sum of the tens digit and units digit.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Does this hold true for all 2-digit numbers divided by 9 ?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 72\n      }, this), \"Consider 34 \\xF7 9.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"The quotient is 3 itself\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"The remainder is 3 + 4 = 7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"A host of other examples affirm that this technique indeed works.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Note\\uD83D\\uDCDD - A Slight Refinement:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Now Consider 49 \\xF7 9.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Quotient = 4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Remainder = (4 + 9) = 13\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Which is absurd, as the remainder can never exceed the divisor. This can be set right in the following fashion. Divide 13 again by 9 ( Using the same technique )\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Quotient = 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Remainder = (1 + 3) = 4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Add this Quotient with 4 to get 5 as the answer. The Remainder is 4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"The above technique can be summarised as follows:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"For a Two digit number to be divided by 9, copy the tens digit as the quotient (Q) and the sum of the tens and units digit as the remainder(R).\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"If this R > 9, Again carry out the division process to obtain a quotient S and a remainder T.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"The result is Quotient=Q+S and remainder is T.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"An Example:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"77 \\xF7 9 :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      class: \"img-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: exo_1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Think about this\\u2757\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \\u261B \", /*#__PURE__*/_jsxDEV(NavLink, {\n        style: {\n          textAlign: 'left',\n          color: 'black'\n        },\n        to: \"/division/3_digit_num\",\n        children: \"How do we divide 3 digit numbers ? \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \\u261B\", /*#__PURE__*/_jsxDEV(NavLink, {\n        style: {\n          textAlign: 'left',\n          color: 'black'\n        },\n        to: \"/division/div_not_9\",\n        children: \"How do we divide when divisor other than 9 ?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = Nikilam;\nexport default Nikilam;\nvar _c;\n$RefreshReg$(_c, \"Nikilam\");","map":{"version":3,"names":["React","NavLink","exo_1","jsxDEV","_jsxDEV","Nikilam","className","children","class","fileName","_jsxFileName","lineNumber","columnNumber","src","style","textAlign","color","to","_c","$RefreshReg$"],"sources":["C:/Users/PRIYA/Downloads/code_contribution_final/Client/src/components/division/Nikilam.js"],"sourcesContent":["import React from 'react'\r\nimport './nik_div.css'\r\nimport { NavLink } from 'react-router-dom'\r\nimport exo_1 from '../../images/exo_div_nik_1.gif'\r\n\r\nconst Nikilam = () => {\r\n  return (\r\n    <div className=\"body\">\r\n          <h3 class='main_heading'>NIKILAM-DIVISION TECHNIQUE</h3>\r\n          <hr/>\r\n          <p>A careful observation of the problem, 52 √∑ 9 would reveal the following:-</p>\r\n\r\n          <p>\r\n          A) The quotient is 5, same as the tens digit of the dividend.\r\n          <br/>\r\n          B) The remainder is 7, the sum of the tens digit and units digit.\r\n          </p>\r\n          <p>Does this hold true for all 2-digit numbers divided by 9 ?<br/>Consider 34 √∑ 9.</p>\r\n        \r\n        <ol>\r\n          <li>The quotient is 3 itself</li>\r\n          <li>The remainder is 3 + 4 = 7</li>\r\n        </ol>\r\n        <p>A host of other examples affirm that this technique indeed works.</p>\r\n        <h3>Noteüìù - A Slight Refinement:</h3>\r\n        <p>Now Consider 49 √∑ 9.</p>\r\n        <ol>\r\n          <li>Quotient = 4</li>\r\n          <li>Remainder = (4 + 9) = 13</li>\r\n        </ol>\r\n        <p>Which is absurd, as the remainder can never exceed the divisor.\r\n           This can be set right in the following fashion. Divide 13 again by 9 ( Using the same technique )</p>\r\n        <ol>\r\n          <li>Quotient = 1</li>\r\n          <li>Remainder = (1 + 3) = 4</li>\r\n        </ol>\r\n        <p>Add this Quotient with 4 to get 5 as the answer. The Remainder is 4.</p>\r\n        <h3>The above technique can be summarised as follows:</h3>\r\n        <ol>\r\n          <li>For a Two digit number to be divided by 9, copy the tens digit as the quotient (Q) and the sum of the tens and units digit as the remainder(R).</li>\r\n          <li>If this R > 9, Again carry out the division process to obtain a quotient S and a remainder T.</li>\r\n          <li>The result is Quotient=Q+S and remainder is T.</li>\r\n        </ol>\r\n        <h3>An Example:</h3>\r\n        <p>77 √∑ 9 :</p>\r\n        <p class='img-wrapper'><img src = {exo_1}/></p>\r\n       \r\n        <h3>Think about this‚ùó</h3>\r\n        <p> &#9755;\t<NavLink style={{textAlign: 'left',color: 'black'}} to = \"/division/3_digit_num\">How do we divide 3 digit numbers ? </NavLink></p>\r\n        <p> &#9755;<NavLink style={{textAlign: 'left',color: 'black'}} to = \"/division/div_not_9\">How do we divide when divisor other than 9 ?</NavLink></p>\r\n        <br/>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Nikilam\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}