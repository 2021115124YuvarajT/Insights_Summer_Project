{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\YUVARAJ T\\\\Desktop\\\\Final_before_review\\\\Final_fina_fully_reviewed\\\\Client\\\\src\\\\components\\\\place_val\\\\moreproblems.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport '../code/Code.css';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function More_place() {\n  _s();\n  const [solution, setSolution] = useState(\"\");\n  const navigate = useNavigate();\n  function handleClick(solutionNumber) {\n    if (solutionNumber === 1) {\n      setSolution(\"<h3>Solution 1:</h3> The answer is <strong>42</strong>. <p>The working is easy and is left as an exercise...</p>\");\n    } else if (solutionNumber === 2) {\n      setSolution(\"<h3>Solution 2: </h3><p> As'b' is the base, removing the negative digits from ..., we get 81<span style='text-decoration:overline;'>a</span>3<span style='text-decoration:overline;'>c</span>2, where x=b-c i.e., x=e+1.</p> <p>Therefore, 80d2x2 can be represented as 80d2(e+1)2.</p> <p> The difference between this and the divisor 80d2e0 is 12 (base b) or b+2 (since 12 (base b) = bx1 + 2). This is the required remainder...</p>\");\n    } else if (solutionNumber === 3) {\n      setSolution(\"<h3>Solution 3:</h3> <h4> Consider a '2' digit number in base 'n' representation.</h4> <p>Let it be (x y)n i.e., y + nx. Here, x and y range from 0 to n-1.</p> <p> Hence, the largest number that can be represented in 2 digits is when y=x=n-1. This number is (n-1) + (n-1)n = n2-1. Moreover, in the base n^2 representation, each digit ranges from 0 to n2-1. Thus, a base 'n^2' digit can be represented in base 'n' using 2 digits. So, an 'm' digit base 'n^2' number can be represented as a '2m' digit base 'n' number. Thus the answer to our problem is 2 x 1947 = 3894...</p><p>Since the base 'n^2' representation of the number referred by the question  has 1947 digits, it can be represented as :</p><p>(a1946  a1945   ...  a2  a1  a0) (base n^2 ) =  a0 +  a1 n^2  +   a2 n^4 +  ...  +  a1946 n3892</p><p>where the a is are base 'n^2' digits. Representing each ai as 2-digit base'n' numbers, (c<sub>i</sub>b<sub>i</sub>)n, we get a<sub>i</sub>=b<sub>i</sub>+c<sub>i</sub>n (b<sub>i</sub>,c<sub>i</sub> range from 0 to n-1). Now the number becomes</p><p>(a<sub>1946</sub>  a<sub>1945</sub>   ...  a<sub>2</sub>  a<sub>1</sub>  a<sub>0</sub>) (base n^2 ) =  (b<sub>0</sub>+c<sub>0</sub>n) +  (b<sub>1</sub>+c<sub>1</sub>n) x n2  +  ...  +  (b1946+c1946n) x n3892</p><p>  =   b<sub>0</sub> + c<sub>0</sub>n + b<sub>1</sub>n^2 + ... + c<sub>1946</sub>n<sup>3893</sup> </p><p> =>   there are 3894  base 'n' digits.</p>\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-body\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      class: \"main_heading\",\n      children: \"STEP BY STEP SOLUTION\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Get Ready for some more exercise!!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: question,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"1. Eliminate the digits greater than half the base from 84679 (base 10).\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: question,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"2. Given that 'b' is the base, d=b-a and e=b-c-1, what is the remainder when 81\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"bar\",\n          children: \"a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 90\n        }, this), \"3\", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: bar,\n          children: \"c\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), \"2 is divided by 80d2e0?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: question,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"3. 'n' being a positive integer, how many digits will be there in a base 'n' representation of a number if the base 'n2' representation had 1947 digits?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: b,\n      onClick: () => handleClick(1),\n      children: \"Solution 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: b,\n      onClick: () => handleClick(2),\n      children: \"Solution 2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: b,\n      onClick: () => handleClick(3),\n      children: \"Solution 3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: solution && /*#__PURE__*/_jsxDEV(Solution, {\n        text: solution\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: back,\n      onClick: () => {\n        navigate(-1);\n      },\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(More_place, \"8C+9aiN+aG6jSg6lSTvKGRmNbqQ=\", false, function () {\n  return [useNavigate];\n});\n_c = More_place;\nfunction Solution(_ref) {\n  let {\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"solution\",\n    dangerouslySetInnerHTML: {\n      __html: text\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 12\n  }, this);\n}\n_c2 = Solution;\nconst bar = {\n  textDecoration: 'overline'\n};\nconst question = {\n  fontSize: 'x-large'\n};\nconst solution = {\n  fontSize: 'x-large',\n  marginLeft: '50px'\n};\nconst b = {\n  marginLeft: '50px',\n  padding: '10px',\n  borderRadius: '10px'\n};\nconst back = {\n  marginLeft: '45%'\n};\nvar _c, _c2;\n$RefreshReg$(_c, \"More_place\");\n$RefreshReg$(_c2, \"Solution\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","More_place","_s","solution","setSolution","navigate","handleClick","solutionNumber","className","children","class","fileName","_jsxFileName","lineNumber","columnNumber","style","question","bar","b","onClick","Solution","text","back","_c","_ref","dangerouslySetInnerHTML","__html","_c2","textDecoration","fontSize","marginLeft","padding","borderRadius","$RefreshReg$"],"sources":["C:/Users/YUVARAJ T/Desktop/Final_before_review/Final_fina_fully_reviewed/Client/src/components/place_val/moreproblems.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport '../code/Code.css'\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function More_place() {\r\n  const [solution, setSolution] = useState(\"\");\r\n    const navigate=useNavigate();\r\n  function handleClick(solutionNumber) {\r\n    if (solutionNumber === 1) {\r\n        setSolution(\r\n            \"<h3>Solution 1:</h3> The answer is <strong>42</strong>. <p>The working is easy and is left as an exercise...</p>\"\r\n          );\r\n          \r\n    } else if (solutionNumber === 2) {\r\n      setSolution(\r\n        \"<h3>Solution 2: </h3><p> As'b' is the base, removing the negative digits from ..., we get 81<span style='text-decoration:overline;'>a</span>3<span style='text-decoration:overline;'>c</span>2, where x=b-c i.e., x=e+1.</p> <p>Therefore, 80d2x2 can be represented as 80d2(e+1)2.</p> <p> The difference between this and the divisor 80d2e0 is 12 (base b) or b+2 (since 12 (base b) = bx1 + 2). This is the required remainder...</p>\"\r\n      );\r\n    } else if (solutionNumber === 3) {\r\n      setSolution(\r\n        \"<h3>Solution 3:</h3> <h4> Consider a '2' digit number in base 'n' representation.</h4> <p>Let it be (x y)n i.e., y + nx. Here, x and y range from 0 to n-1.</p> <p> Hence, the largest number that can be represented in 2 digits is when y=x=n-1. This number is (n-1) + (n-1)n = n2-1. Moreover, in the base n^2 representation, each digit ranges from 0 to n2-1. Thus, a base 'n^2' digit can be represented in base 'n' using 2 digits. So, an 'm' digit base 'n^2' number can be represented as a '2m' digit base 'n' number. Thus the answer to our problem is 2 x 1947 = 3894...</p><p>Since the base 'n^2' representation of the number referred by the question  has 1947 digits, it can be represented as :</p><p>(a1946  a1945   ...  a2  a1  a0) (base n^2 ) =  a0 +  a1 n^2  +   a2 n^4 +  ...  +  a1946 n3892</p><p>where the a is are base 'n^2' digits. Representing each ai as 2-digit base'n' numbers, (c<sub>i</sub>b<sub>i</sub>)n, we get a<sub>i</sub>=b<sub>i</sub>+c<sub>i</sub>n (b<sub>i</sub>,c<sub>i</sub> range from 0 to n-1). Now the number becomes</p><p>(a<sub>1946</sub>  a<sub>1945</sub>   ...  a<sub>2</sub>  a<sub>1</sub>  a<sub>0</sub>) (base n^2 ) =  (b<sub>0</sub>+c<sub>0</sub>n) +  (b<sub>1</sub>+c<sub>1</sub>n) x n2  +  ...  +  (b1946+c1946n) x n3892</p><p>  =   b<sub>0</sub> + c<sub>0</sub>n + b<sub>1</sub>n^2 + ... + c<sub>1946</sub>n<sup>3893</sup> </p><p> =>   there are 3894  base 'n' digits.</p>\"\r\n      );\r\n    }\r\n  }\r\n  \r\n\r\n  return (\r\n    <div className=\"content-body\">\r\n      <h3 class='main_heading'>STEP BY STEP SOLUTION</h3>\r\n      <hr/>\r\n      <h3>Get Ready for some more exercise!!!</h3>\r\n      <div style={question}>\r\n        <p>1. Eliminate the digits greater than half the base from 84679 (base 10).</p>\r\n      </div>\r\n      <div style={question}>\r\n        <p>\r\n          2. Given that 'b' is the base, d=b-a and e=b-c-1, what is the remainder when 81<span className=\"bar\">a</span>3\r\n          <span style={bar}>c</span>2 is divided by 80d2e0?\r\n        </p>\r\n      </div>\r\n      <div style={question}>\r\n        <p>\r\n          3. 'n' being a positive integer, how many digits will be there in a base 'n' representation of a number if the\r\n          base 'n2' representation had 1947 digits?\r\n        </p>\r\n      </div>\r\n      <button style={b} onClick={() => handleClick(1)}>Solution 1</button>\r\n      <button style={b} onClick={() => handleClick(2)}>Solution 2</button>\r\n      <button  style={b} onClick={() => handleClick(3)}>Solution 3</button>\r\n      <div>{solution && <Solution text={solution} />}</div>\r\n      <button style={back} onClick={()=>{navigate(-1)}}>Back</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Solution({ text }) {\r\n    return <div className=\"solution\" dangerouslySetInnerHTML={{ __html: text }} />;\r\n  }\r\n  \r\nconst bar = {\r\n  textDecoration:'overline'\r\n}\r\nconst question = {\r\n  fontSize:'x-large'\r\n}\r\nconst solution = {\r\n  fontSize:'x-large',\r\n  marginLeft:'50px'\r\n}\r\nconst b  = {\r\n  marginLeft:'50px',\r\n  padding:'10px',\r\n  borderRadius:'10px'\r\n}\r\nconst back = {\r\n  marginLeft:'45%'\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}