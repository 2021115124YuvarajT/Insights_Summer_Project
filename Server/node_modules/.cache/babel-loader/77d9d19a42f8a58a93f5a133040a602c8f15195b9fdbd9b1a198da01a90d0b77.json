{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\YUVARAJ T\\\\Desktop\\\\Final_before_review\\\\Final_fina_fully_reviewed\\\\Client\\\\src\\\\components\\\\sqr_root\\\\Exercise.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../division/nik_div.css';\nimport { useNavigate } from \"react-router-dom\";\nimport book from '../../images/ex_book.gif';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst questions_set_1 = [{\n  id: 1,\n  question: '1)4624',\n  answer: 68\n}, {\n  id: 2,\n  question: '2)201601',\n  answer: 449\n}, {\n  id: 3,\n  question: '3)966289',\n  answer: 983\n}, {\n  id: 4,\n  question: '4)12020089',\n  answer: 3467\n}, {\n  id: 5,\n  question: '5)9245207104',\n  answer: 96152\n}];\nconst Exercise = () => {\n  _s();\n  const navigate = useNavigate();\n  const [answers, setAnswers] = useState(Array(5).fill(\"\"));\n  const [verifications, setVerification] = useState(Array(5).fill(\"give it a try!\"));\n  function handleChange(event, index) {\n    const new_answers = [...answers];\n    new_answers[index] = event.target.value;\n    setAnswers(new_answers);\n  }\n  function handleShow(index) {\n    const correct_answers = [...answers];\n    correct_answers[index] = questions_set_1[index].answer;\n    setAnswers(correct_answers);\n  }\n  function handleVerify(index) {\n    const isCorrect = parseInt(answers[index]) === questions_set_1[index].answer;\n    const newVerification = [...verifications];\n    newVerification[index] = isCorrect ? \"Correct\" : \"Wrong\";\n    setVerification(newVerification);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: title,\n      children: \"EXERCISES\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: book\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 8\n      }, this), \"Practice makes a person perfect! Why don't you practice with these questions!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Q1) Find the square root of the following   perfect squares-use mishrank wherever necessary:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this), questions_set_1.map((q, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      id: q.id,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: q.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        class: \"input_sq_rt\",\n        type: \"text\",\n        style: input_class,\n        onChange: e => handleChange(e, index),\n        value: answers[index]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"show_button\",\n        onClick: () => handleShow(index),\n        children: \"SHOW ANSWERS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"verify_button\",\n        onClick: () => handleVerify(index),\n        children: \"VERIFY ANSWERS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"try_span\",\n        style: verifications[index] === \"Wrong\" ? {\n          'color': 'red'\n        } : {\n          'color': 'green'\n        },\n        children: verifications[index]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        'margin-left': '30%'\n      },\n      onClick: () => navigate('/squar_root/exer_2'),\n      children: \"WANNA PRACTICE MORE PROBLEMS? CLICK HERE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Exercise, \"OLy7TW6UlJ7wy9ahoT3y+O2LYo4=\", false, function () {\n  return [useNavigate];\n});\n_c = Exercise;\nexport default Exercise;\nconst input_button = {\n  fontSize: '20px',\n  marginLeft: '20px',\n  padding: '5px',\n  width: '200px',\n  marginLeft: '50px'\n};\nconst verify_button = {\n  marginLeft: '50px',\n  fontSize: '20px',\n  width: '200px',\n  padding: '5px',\n  textDecoration: 'none'\n};\nconst input_class = {\n  fontSize: 'large',\n  fontWeight: 'bold',\n  marginLeft: '30px',\n  borderRadius: '15px',\n  textAlign: 'center'\n};\nconst title = {\n  marginLeft: '40%'\n};\nvar _c;\n$RefreshReg$(_c, \"Exercise\");","map":{"version":3,"names":["React","useState","useNavigate","book","jsxDEV","_jsxDEV","questions_set_1","id","question","answer","Exercise","_s","navigate","answers","setAnswers","Array","fill","verifications","setVerification","handleChange","event","index","new_answers","target","value","handleShow","correct_answers","handleVerify","isCorrect","parseInt","newVerification","class","children","style","title","fileName","_jsxFileName","lineNumber","columnNumber","src","map","q","type","input_class","onChange","e","onClick","className","_c","input_button","fontSize","marginLeft","padding","width","verify_button","textDecoration","fontWeight","borderRadius","textAlign","$RefreshReg$"],"sources":["C:/Users/YUVARAJ T/Desktop/Final_before_review/Final_fina_fully_reviewed/Client/src/components/sqr_root/Exercise.js"],"sourcesContent":["import React,{useState} from 'react'\r\nimport '../division/nik_div.css';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport book from '../../images/ex_book.gif'\r\n\r\nconst questions_set_1=[\r\n    { id:1,question:'1)4624',answer:68},\r\n    { id:2,question:'2)201601',answer:449},\r\n    { id:3,question:'3)966289',answer:983},\r\n    { id:4,question:'4)12020089',answer:3467},\r\n    { id:5,question:'5)9245207104',answer:96152}\r\n];\r\n\r\n\r\nconst Exercise = () => {\r\n    const navigate=useNavigate();    \r\n    const [answers,setAnswers]= useState(Array(5).fill(\"\"));\r\n    const [verifications, setVerification] = useState(Array(5).fill(\"give it a try!\"));\r\n\r\n    function handleChange(event,index)\r\n    {\r\n    const new_answers=[...answers];\r\n    new_answers[index]=event.target.value;\r\n    setAnswers(new_answers);\r\n    }\r\n    function handleShow(index) {\r\n        const correct_answers = [...answers];\r\n        correct_answers[index] = questions_set_1[index].answer;\r\n        setAnswers(correct_answers);\r\n    }\r\n    function handleVerify(index) {\r\n        const isCorrect = parseInt(answers[index]) === questions_set_1[index].answer;\r\n        const newVerification = [...verifications];\r\n        newVerification[index] = isCorrect ? \"Correct\" : \"Wrong\";\r\n        setVerification(newVerification);\r\n    }\r\n\r\n  return (\r\n    <div class='body'>\r\n    <h3 style={title}>EXERCISES</h3>\r\n    <hr/>\r\n    <p><img src={book}/>Practice makes a person perfect! Why don't you practice with these questions!</p>\r\n    <h4>Q1) Find the square root of the following   perfect squares-use mishrank wherever necessary:</h4>\r\n    {questions_set_1.map((q,index) => (\r\n        <div id={q.id}>\r\n        <p>{q.question}</p>\r\n        <input class='input_sq_rt' type='text' style={input_class}\r\n        onChange={(e) => handleChange(e, index)} value={answers[index]}/>&nbsp;&nbsp;\r\n        <button type='show_button' onClick={()=>handleShow(index)}>SHOW ANSWERS</button>&nbsp;&nbsp;\r\n        <button type='verify_button' onClick={()=>handleVerify(index)}>VERIFY ANSWERS</button>&nbsp;&nbsp;\r\n        <span className=\"try_span\" style={verifications[index]=== \"Wrong\" ? {'color':'red'}:{'color':'green'}}>\r\n            {verifications[index]}\r\n        </span>\r\n        </div>\r\n        ))}\r\n        <br/>\r\n        <br/>\r\n        <button style={{'margin-left':'30%'}}onClick ={()=>navigate('/squar_root/exer_2')}>WANNA PRACTICE MORE PROBLEMS? CLICK HERE</button>\r\n        <br/>\r\n        <hr/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Exercise\r\n\r\nconst input_button = {\r\n    fontSize: '20px',\r\n    marginLeft:'20px',\r\n    padding: '5px',\r\n    width:'200px',\r\n    marginLeft:'50px'\r\n  }\r\n  const verify_button  = {\r\n  marginLeft:'50px',\r\n  fontSize:'20px',\r\n  width:'200px',\r\n  padding:'5px',\r\n  textDecoration:'none'\r\n  }\r\n  const input_class = {\r\n    fontSize:'large',\r\n    fontWeight:'bold',\r\n    marginLeft:'30px',\r\n    borderRadius:'15px',\r\n    textAlign:'center'\r\n    }\r\n  const title={\r\n      marginLeft:'40%'\r\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}